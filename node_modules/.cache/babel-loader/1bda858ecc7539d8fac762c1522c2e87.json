{"ast":null,"code":"import _regeneratorRuntime from \"/home/ciberexplosion/Desktop/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ciberexplosion/Desktop/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ciberexplosion/Desktop/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/ciberexplosion/Desktop/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ciberexplosion/Desktop/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/ciberexplosion/Desktop/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/ciberexplosion/Desktop/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ciberexplosion/Desktop/starter_kit/src/components/App.js\";\nimport React, { Component } from 'react';\nimport logo from '../logo.png';\nimport Web3 from 'web3';\nimport './App.css';\nimport Meme from '../abis/Meme.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, contract, memeHash;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(\"account  \", accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                console.log(\"Account set\", this.state.account);\n                _context3.next = 9;\n                return web3.eth.net.getId();\n\n              case 9:\n                networkId = _context3.sent;\n                networkData = Meme.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                contract = web3.eth.Contract(Meme.abi, networkData.address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 16;\n                return contract.methods.get().call();\n\n              case 16:\n                memeHash = _context3.sent;\n                console.log(\"Contract call output\", memeHash);\n                this.setState({\n                  memeHash: memeHash\n                });\n                _context3.next = 22;\n                break;\n\n              case 21:\n                window.alert('Smart contract not deployed to detected network.');\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Submitting file to ipfs\");\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.state.contract.methods.set(result[0].hash).send({\n          from: _this.state.account\n        }).then(function (r) {\n          return _this.setState({\n            memeHash: result[0].hash\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      memeHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"https://in.linkedin.com/in/sachinmatta\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Document IPFS CID is --> \", this.state.memeHash), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Connected account --> \", this.state.account)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://in.linkedin.com/in/sachinmatta\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Add document\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/ciberexplosion/Desktop/starter_kit/src/components/App.js"],"names":["React","Component","logo","Web3","Meme","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","state","net","getId","networkId","networkData","networks","contract","Contract","abi","address","methods","get","call","memeHash","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","onSubmit","add","error","set","hash","send","from","then","r"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../logo.png';\nimport Web3 from 'web3';\nimport './App.css';\nimport Meme from '../abis/Meme.json'\n\n\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    var accounts = await web3.eth.getAccounts()\n    console.log(\"account  \",  accounts)\n    this.setState({  account: accounts[0] })\n    console.log(\"Account set\", this.state.account)\n    var networkId = await web3.eth.net.getId()\n    var networkData = Meme.networks[networkId]\n    if(networkData) {\n      var contract = web3.eth.Contract(Meme.abi, networkData.address)\n      this.setState({ contract })\n      var memeHash = await contract.methods.get().call()\n      console.log(\"Contract call output\" ,  memeHash)\n      this.setState({ memeHash })\n    } else {\n      window.alert('Smart contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      memeHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null\n    }\n  }  \n\n  captureFile = (event) => {\n    event.preventDefault()\n    var file = event.target.files[0]\n    var reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    console.log(\"Submitting file to ipfs\")\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('Ipfs result', result)\n      if(error) {\n        console.error(error)\n        return\n      }\n      this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\n        return this.setState({ memeHash: result[0].hash })\n      })\n   })\n }\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"https://in.linkedin.com/in/sachinmatta\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Document IPFS CID is --> {this.state.memeHash}\n          </a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n             <small className=\"text-white\">Connected account --> {this.state.account}</small>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"https://in.linkedin.com/in/sachinmatta\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <h2>Add document</h2>\n                <form onSubmit={this.onSubmit} >\n                  <input type='file' onChange={this.captureFile} />\n                  <input type='submit' />\n                </form>      \n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}